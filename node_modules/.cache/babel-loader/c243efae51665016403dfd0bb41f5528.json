{"ast":null,"code":"var _jsxFileName = \"/home/dejan/Desktop/React-exercise-Todo-List/src/components/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./TodoItem.module.css\";\nimport { FaTrash } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = props => {\n  _s();\n\n  const [editing, setEditing] = useState(false);\n\n  const handleEditing = () => {\n    setEditing(true);\n  };\n\n  const handleUpdatedDone = event => {\n    if (event.key === \"Enter\") {\n      setEditing(false);\n    }\n  };\n\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#595959\",\n    opacity: 0.4,\n    textDecoration: \"line-through\"\n  };\n  const {\n    completed,\n    id,\n    title\n  } = props.todo;\n  let viewMode = {};\n  let editMode = {};\n\n  if (editing) {\n    viewMode.display = \"none\";\n  } else {\n    editMode.display = \"none\";\n  }\n\n  useEffect(() => {\n    return () => {\n      console.log(\"Cleaning up...\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.item,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onDoubleClick: handleEditing,\n      style: viewMode,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: styles.checkbox,\n        checked: completed,\n        onChange: () => props.handleChangeProps(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.deleteTodoProps(id),\n        children: /*#__PURE__*/_jsxDEV(FaTrash, {\n          style: {\n            color: \"orangered\",\n            fontSize: \"16px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: completed ? completedStyle : null,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      style: editMode,\n      className: styles.textInput,\n      value: title,\n      onChange: e => {\n        props.setUpdate(e.target.value, id);\n      },\n      onKeyDown: handleUpdatedDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoItem, \"4da9QhRSPGznlVTnx8cpe7ty4OM=\");\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/home/dejan/Desktop/React-exercise-Todo-List/src/components/TodoItem.js"],"names":["React","useState","useEffect","styles","FaTrash","TodoItem","props","editing","setEditing","handleEditing","handleUpdatedDone","event","key","completedStyle","fontStyle","color","opacity","textDecoration","completed","id","title","todo","viewMode","editMode","display","console","log","item","checkbox","handleChangeProps","deleteTodoProps","fontSize","textInput","e","setUpdate","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMQ,aAAa,GAAG,MAAM;AAC1BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIA,QAAME,iBAAiB,GAAIC,KAAD,IAAW;AACnC,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzBJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAJD;;AAMA,QAAMK,cAAc,GAAG;AACrBC,IAAAA,SAAS,EAAE,QADU;AAErBC,IAAAA,KAAK,EAAE,SAFc;AAGrBC,IAAAA,OAAO,EAAE,GAHY;AAIrBC,IAAAA,cAAc,EAAE;AAJK,GAAvB;AAOA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,EAAb;AAAiBC,IAAAA;AAAjB,MAA2Bd,KAAK,CAACe,IAAvC;AAEA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,QAAQ,GAAG,EAAf;;AAEA,MAAIhB,OAAJ,EAAa;AACXe,IAAAA,QAAQ,CAACE,OAAT,GAAmB,MAAnB;AACD,GAFD,MAEO;AACLD,IAAAA,QAAQ,CAACC,OAAT,GAAmB,MAAnB;AACD;;AAEDtB,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXuB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAI,IAAA,SAAS,EAAEvB,MAAM,CAACwB,IAAtB;AAAA,4BACE;AAAK,MAAA,aAAa,EAAElB,aAApB;AAAmC,MAAA,KAAK,EAAEa,QAA1C;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAEnB,MAAM,CAACyB,QAFpB;AAGE,QAAA,OAAO,EAAEV,SAHX;AAIE,QAAA,QAAQ,EAAE,MAAMZ,KAAK,CAACuB,iBAAN,CAAwBV,EAAxB;AAJlB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAMb,KAAK,CAACwB,eAAN,CAAsBX,EAAtB,CAAvB;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAE;AAAEJ,YAAAA,KAAK,EAAE,WAAT;AAAsBgB,YAAAA,QAAQ,EAAE;AAAhC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAM,QAAA,KAAK,EAAEb,SAAS,GAAGL,cAAH,GAAoB,IAA1C;AAAA,kBAAiDO;AAAjD;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEG,QAFT;AAGE,MAAA,SAAS,EAAEpB,MAAM,CAAC6B,SAHpB;AAIE,MAAA,KAAK,EAAEZ,KAJT;AAKE,MAAA,QAAQ,EAAGa,CAAD,IAAO;AACf3B,QAAAA,KAAK,CAAC4B,SAAN,CAAgBD,CAAC,CAACE,MAAF,CAASC,KAAzB,EAAgCjB,EAAhC;AACD,OAPH;AAQE,MAAA,SAAS,EAAET;AARb;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA/DD;;GAAML,Q;;KAAAA,Q;AAiEN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./TodoItem.module.css\";\nimport { FaTrash } from \"react-icons/fa\";\n\nconst TodoItem = (props) => {\n  const [editing, setEditing] = useState(false);\n\n  const handleEditing = () => {\n    setEditing(true);\n  };\n\n  const handleUpdatedDone = (event) => {\n    if (event.key === \"Enter\") {\n      setEditing(false);\n    }\n  };\n\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#595959\",\n    opacity: 0.4,\n    textDecoration: \"line-through\",\n  };\n\n  const { completed, id, title } = props.todo;\n\n  let viewMode = {};\n  let editMode = {};\n\n  if (editing) {\n    viewMode.display = \"none\";\n  } else {\n    editMode.display = \"none\";\n  }\n\n  useEffect(() => {\n    return () => {\n      console.log(\"Cleaning up...\");\n    };\n  }, []);\n\n  return (\n    <li className={styles.item}>\n      <div onDoubleClick={handleEditing} style={viewMode}>\n        <input\n          type=\"checkbox\"\n          className={styles.checkbox}\n          checked={completed}\n          onChange={() => props.handleChangeProps(id)}\n        />\n        <button onClick={() => props.deleteTodoProps(id)}>\n          <FaTrash style={{ color: \"orangered\", fontSize: \"16px\" }} />\n        </button>\n        <span style={completed ? completedStyle : null}>{title}</span>\n      </div>\n      <input\n        type=\"text\"\n        style={editMode}\n        className={styles.textInput}\n        value={title}\n        onChange={(e) => {\n          props.setUpdate(e.target.value, id);\n        }}\n        onKeyDown={handleUpdatedDone}\n      />\n    </li>\n  );\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}