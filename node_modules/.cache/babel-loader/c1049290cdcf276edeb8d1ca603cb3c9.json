{"ast":null,"code":"var _jsxFileName = \"/home/dejan/Desktop/React-exercise-Todo-List/src/components/TodoContainer.js\";\nimport Header from \"./Header\";\nimport InputTodo from \"./InputTodo\";\nimport TodosList from \"./TodosList\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport About from \"../pages/About\";\nimport NotMatch from \"../pages/NotMatch\";\n\nconst TodoContainer = () => {\n  const getInitialTodos = () => {\n    // getting stored items\n    const temp = localStorage.getItem(\"todos\");\n    const savedTodos = JSON.parse(temp);\n    return savedTodos || [];\n  };\n\n  const [todos, setTodos] = useState(getInitialTodos());\n\n  const handleChange = id => {\n    setTodos(prevState => prevState.map(todo => {\n      if (todo.id === id) {\n        return { ...todo,\n          completed: !todo.completed\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const delTodo = id => {\n    setTodos([...todos.filter(todo => {\n      return todo.id !== id;\n    })]);\n  };\n\n  const addTodoItem = title => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  const setUpdate = (updatedTitle, id) => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.title = updatedTitle;\n      }\n\n      return todo;\n    }));\n  };\n\n  useEffect(() => {\n    // storing todos items\n    const temp = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", temp);\n  }, [todos]);\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputTodo, {\n    addTodoProps: addTodoItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TodosList, {\n    todos: todos,\n    handleChangeProps: handleChange,\n    deleteTodoProps: delTodo,\n    setUpdate: setUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(About, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NotMatch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TodoContainer;","map":{"version":3,"sources":["/home/dejan/Desktop/React-exercise-Todo-List/src/components/TodoContainer.js"],"names":["Header","InputTodo","TodosList","v4","uuidv4","React","useState","useEffect","Route","Switch","About","NotMatch","TodoContainer","getInitialTodos","temp","localStorage","getItem","savedTodos","JSON","parse","todos","setTodos","handleChange","id","prevState","map","todo","completed","delTodo","filter","addTodoItem","title","newTodo","setUpdate","updatedTitle","stringify","setItem"],"mappings":"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","sourcesContent":["import Header from \"./Header\"\nimport InputTodo from \"./InputTodo\"\nimport TodosList from \"./TodosList\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport React, { useState, useEffect } from \"react\"\nimport { Route, Switch,} from \"react-router-dom\"\nimport About from \"../pages/About\"\nimport NotMatch from \"../pages/NotMatch\"\n\n\nconst TodoContainer = () => {\n  const getInitialTodos = () => {\n    // getting stored items\n    const temp = localStorage.getItem(\"todos\")\n    const savedTodos = JSON.parse(temp)\n    return savedTodos || []\n  }\n\n  const [todos, setTodos] = useState(getInitialTodos())\n\n  const handleChange = id => {\n    setTodos(prevState =>\n      prevState.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          }\n        }\n        return todo\n      })\n    )\n  }\n\n  const delTodo = id => {\n    setTodos([\n      ...todos.filter(todo => {\n        return todo.id !== id\n      }),\n    ])\n  }\n\n  const addTodoItem = title => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false,\n    }\n    setTodos([...todos, newTodo])\n  }\n\n  const setUpdate = (updatedTitle, id) => {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.title = updatedTitle\n        }\n        return todo\n      })\n    )\n  }\n\n\n \n  useEffect(() => {\n    // storing todos items\n    const temp = JSON.stringify(todos)\n    localStorage.setItem(\"todos\", temp)\n  }, [todos])\n\n  return (   \n    <Switch>\n    <Route path=\"/\">\n        <div className=\"container\">\n          <div className=\"inner\">\n            <Header />\n            <InputTodo addTodoProps={addTodoItem} />\n            <TodosList\n              todos={todos}\n              handleChangeProps={handleChange}\n              deleteTodoProps={delTodo}\n              setUpdate={setUpdate}\n            />\n          </div>\n        </div>\n      </Route>\n        <Route path=\"/about\">\n        <About />\n      </Route>\n      <Route path=\"*\">\n        <NotMatch />\n      </Route>\n    </Switch>\n      \n    )\n}\n\nexport default TodoContainer\n"]},"metadata":{},"sourceType":"module"}